on:
  push:
    branches:
    - master
    - release

name: Deploy to AWS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.TERRAFORM_AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.TERRAFORM_AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install deterministic-zip
      run: pip install deterministic-zip

    - name: Package lambda-function
      run: |
        python -m pip install --target lambda-package -r requirements-lambda.txt
        find lambda-package/ | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
        cp main.py lambda-package/main.py
        (cd lambda-package && deterministic_zip -r ../lambda-package.zip .)
      working-directory: app

    - name: Set TF_WORKSPACE to dev
      if: endsWith(github.ref, '/master')
      run: echo "TF_WORKSPACE=dev" >> $GITHUB_ENV
    - name: Set TF_WORKSPACE to prod
      if: endsWith(github.ref, '/release')
      run: echo "TF_WORKSPACE=prod" >> $GITHUB_ENV
    - name: Set TF_CLI_ARGS_init S3 backend parameters
      run: printf "TF_CLI_ARGS_init=-backend-config=\"bucket=${{ secrets.TERRAFORM_BACKEND_S3_BUCKET }}\"" >> $GITHUB_ENV

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: infra
        
    - name: Terraform Plan
      run: terraform plan
      working-directory: infra
        
    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: infra
